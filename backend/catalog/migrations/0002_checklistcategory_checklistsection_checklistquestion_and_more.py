# Generated by Django 5.0.14 on 2025-09-19 17:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("catalog", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ChecklistCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.SlugField(
                        help_text="Уникальный идентификатор для ссылок и импорта.",
                        unique=True,
                        verbose_name="Код",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Отображаемое имя категории.",
                        max_length=255,
                        verbose_name="Название",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Используется для сортировки категорий в интерфейсе.",
                        verbose_name="Порядок",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория чек-листа",
                "verbose_name_plural": "Категории чек-листа",
                "ordering": ["order", "name"],
                "indexes": [
                    models.Index(fields=["order"], name="catalog_che_order_b779d9_idx")
                ],
            },
        ),
        migrations.CreateModel(
            name="ChecklistSection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Заголовок секции в чек-листе.",
                        max_length=255,
                        verbose_name="Название",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Дополнительные инструкции для аудитора.",
                        verbose_name="Описание",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Определяет расположение секции внутри категории.",
                        verbose_name="Порядок",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        help_text="Категория, к которой относится секция.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sections",
                        to="catalog.checklistcategory",
                        verbose_name="Категория",
                    ),
                ),
            ],
            options={
                "verbose_name": "Секция чек-листа",
                "verbose_name_plural": "Секции чек-листа",
                "ordering": ["order", "id"],
            },
        ),
        migrations.CreateModel(
            name="ChecklistQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "text",
                    models.TextField(
                        help_text="Текст вопроса, отображаемый аудитору.",
                        verbose_name="Формулировка",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("score", "Балльный"),
                            ("boolean", "Да/Нет"),
                            ("text", "Текстовый"),
                        ],
                        default="score",
                        help_text="Определяет формат ответа.",
                        max_length=20,
                        verbose_name="Тип вопроса",
                    ),
                ),
                (
                    "max_score",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Используется для балльных вопросов.",
                        verbose_name="Максимальный балл",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Позиция вопроса внутри секции.",
                        verbose_name="Порядок",
                    ),
                ),
                (
                    "guideline",
                    models.TextField(
                        blank=True,
                        help_text="Инструкции или критерии оценки.",
                        verbose_name="Подсказка",
                    ),
                ),
                (
                    "requires_comment",
                    models.BooleanField(
                        default=False,
                        help_text="Требовать комментарий независимо от выбранного балла.",
                        verbose_name="Комментарий обязателен",
                    ),
                ),
                (
                    "section",
                    models.ForeignKey(
                        help_text="Секция, в которой отображается вопрос.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions",
                        to="catalog.checklistsection",
                        verbose_name="Секция",
                    ),
                ),
            ],
            options={
                "verbose_name": "Вопрос чек-листа",
                "verbose_name_plural": "Вопросы чек-листа",
                "ordering": ["order", "id"],
            },
        ),
        migrations.CreateModel(
            name="ObjectInfoField",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.SlugField(
                        help_text="Машинное имя поля для хранения значений.",
                        unique=True,
                        verbose_name="Код",
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        help_text="Как поле отображается в форме.",
                        max_length=255,
                        verbose_name="Название",
                    ),
                ),
                (
                    "field_type",
                    models.CharField(
                        choices=[
                            ("text", "Текст"),
                            ("number", "Число"),
                            ("date", "Дата"),
                            ("boolean", "Да/Нет"),
                            ("choice", "Выбор из списка"),
                        ],
                        default="text",
                        help_text="Определяет формат значения.",
                        max_length=20,
                        verbose_name="Тип поля",
                    ),
                ),
                (
                    "is_required",
                    models.BooleanField(
                        default=False,
                        help_text="Нужно ли обязательно заполнять поле.",
                        verbose_name="Обязательное",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Используется для сортировки полей.",
                        verbose_name="Порядок",
                    ),
                ),
                (
                    "choices",
                    models.TextField(
                        blank=True,
                        help_text="Список значений для выбора (по одному в строке). Используется для полей выбора.",
                        verbose_name="Варианты",
                    ),
                ),
            ],
            options={
                "verbose_name": "Поле информационной карточки",
                "verbose_name_plural": "Поля информационной карточки",
                "ordering": ["order", "label"],
                "indexes": [
                    models.Index(fields=["order"], name="catalog_obj_order_d8f086_idx")
                ],
            },
        ),
        migrations.CreateModel(
            name="ScoreOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.PositiveIntegerField(
                        help_text="Количество баллов за выбранный вариант.",
                        verbose_name="Баллы",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="Краткое описание условия получения баллов.",
                        max_length=255,
                        verbose_name="Описание",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Используется для сортировки вариантов.",
                        verbose_name="Порядок",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        help_text="Вопрос, к которому относится вариант.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="score_options",
                        to="catalog.checklistquestion",
                        verbose_name="Вопрос",
                    ),
                ),
            ],
            options={
                "verbose_name": "Вариант оценки",
                "verbose_name_plural": "Варианты оценок",
                "ordering": ["order", "id"],
            },
        ),
        migrations.AddConstraint(
            model_name="checklistsection",
            constraint=models.UniqueConstraint(
                fields=("category", "order"), name="unique_section_order_per_category"
            ),
        ),
        migrations.AddConstraint(
            model_name="checklistquestion",
            constraint=models.UniqueConstraint(
                fields=("section", "order"), name="unique_question_order_per_section"
            ),
        ),
        migrations.AddConstraint(
            model_name="scoreoption",
            constraint=models.UniqueConstraint(
                fields=("question", "order"),
                name="unique_score_option_order_per_question",
            ),
        ),
        migrations.AddConstraint(
            model_name="scoreoption",
            constraint=models.UniqueConstraint(
                fields=("question", "score"), name="unique_score_per_question"
            ),
        ),
    ]
