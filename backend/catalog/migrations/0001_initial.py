# Generated by Django 5.0.14 on 2025-09-19 17:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Building",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        help_text="Улица и номер дома.",
                        max_length=255,
                        verbose_name="Адрес",
                    ),
                ),
                (
                    "entrance",
                    models.CharField(
                        blank=True,
                        help_text="Дополнительные указания: номер подъезда, корпус и т.п.",
                        max_length=50,
                        verbose_name="Подъезд",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Особенности объекта или дополнительные комментарии.",
                        verbose_name="Примечания",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Когда запись была создана.",
                        verbose_name="Дата создания",
                    ),
                ),
                (
                    "verified_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Когда администратор проверил запись.",
                        null=True,
                        verbose_name="Дата подтверждения",
                    ),
                ),
                (
                    "review_status",
                    models.CharField(
                        choices=[
                            ("pending", "Ожидает проверки"),
                            ("approved", "Подтверждён"),
                            ("rejected", "Отклонён"),
                        ],
                        default="pending",
                        help_text="Определяет доступность записи для других пользователей.",
                        max_length=20,
                        verbose_name="Статус модерации",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Пользователь, добавивший запись.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="buildings_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор",
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Администратор, утвердивший запись.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="buildings_verified",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Подтвердил",
                    ),
                ),
            ],
            options={
                "verbose_name": "Здание",
                "verbose_name_plural": "Здания",
                "ordering": ["address", "entrance"],
            },
        ),
        migrations.CreateModel(
            name="Elevator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "identifier",
                    models.CharField(
                        help_text="Заводской номер или внутренний идентификатор.",
                        max_length=64,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Дополнительная информация о лифте.",
                        verbose_name="Описание",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("in_service", "В эксплуатации"),
                            ("out_of_service", "Не работает"),
                            ("under_maintenance", "На обслуживании"),
                            ("decommissioned", "Списан"),
                        ],
                        default="in_service",
                        help_text="Текущее состояние лифта.",
                        max_length=32,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Когда запись была создана.",
                        verbose_name="Дата создания",
                    ),
                ),
                (
                    "verified_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Когда администратор проверил запись.",
                        null=True,
                        verbose_name="Дата подтверждения",
                    ),
                ),
                (
                    "review_status",
                    models.CharField(
                        choices=[
                            ("pending", "Ожидает проверки"),
                            ("approved", "Подтверждён"),
                            ("rejected", "Отклонён"),
                        ],
                        default="pending",
                        help_text="Определяет доступность записи для других пользователей.",
                        max_length=20,
                        verbose_name="Статус модерации",
                    ),
                ),
                (
                    "building",
                    models.ForeignKey(
                        help_text="Объект, в котором расположен лифт.",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="elevators",
                        to="catalog.building",
                        verbose_name="Здание",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Пользователь, добавивший запись.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="elevators_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор",
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Администратор, утвердивший запись.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="elevators_verified",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Подтвердил",
                    ),
                ),
            ],
            options={
                "verbose_name": "Лифт",
                "verbose_name_plural": "Лифты",
                "ordering": ["building__address", "identifier"],
            },
        ),
        migrations.AddConstraint(
            model_name="building",
            constraint=models.UniqueConstraint(
                condition=models.Q(("review_status", "approved")),
                fields=("address", "entrance"),
                name="unique_approved_building_address",
            ),
        ),
        migrations.AddConstraint(
            model_name="elevator",
            constraint=models.UniqueConstraint(
                condition=models.Q(("review_status", "approved")),
                fields=("building", "identifier"),
                name="unique_approved_elevator_identifier",
            ),
        ),
    ]
